@page "/"
@inject IDbContextFactory<PageDbContext> DbPageContextFactory
@using ESHOPMAT.Models
@using Microsoft.AspNetCore.Components

@if (RootPageContent == null)
{
    <p>Loading...</p> <!-- Simple loading indicator -->
}
else
{
    <DynamicComponentRendering Page="RootPageContent" IsEditing="false"></DynamicComponentRendering>
}

@code {
    private PageContent? RootPageContent { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var pageContext = await DbPageContextFactory.CreateDbContextAsync();
        RootPageContent = await GenerateMainPageTemplate(pageContext);
    }

    private async Task<PageContent> GenerateMainPageTemplate(PageDbContext context)
    {
        const string templateName = "MainPageTemplate"; // Fixed name for main page template
        PageContentDictionaryCache.Initialize(context);

        var allPages = context.Pages.ToList();
        var existingTemplate = allPages.FirstOrDefault(p => p.Name == templateName);

        if (existingTemplate != null)
        {
            return existingTemplate;
        }

        var newTemplate = CreateDefaultMainPageTemplate(context);
        await context.Pages.AddAsync(newTemplate);
        await context.SaveChangesAsync();

        return newTemplate;
    }

    private PageContent CreateDefaultMainPageTemplate(PageDbContext context)
    {
        var page = new PageContent(new PageSettings
            {
                Name = "MainPageTemplate",
                Type = ComponentType.Container,
                RowCount = 16,
                ColCount = 16,
                IsRoot = true
            }, context);

        page.AddChild(new PageSettings
            {
                Name = "Text",
                Type = ComponentType.TextBlock,
                Title = "Welcome",
                Text = "To Eshop",
                Row = 1,
                Col = 1,
                RowSpan = 2,
                ColSpan = 16
            });


        page.AddChild(new PageSettings
            {
                Name = "FeaturedProducts",
                Type = ComponentType.ProductList, // Define a new custom component type
                Row = 7,
                Col = 1,
                RowSpan = 6,
                ColSpan = 16
            });


        return page;
    }
}
